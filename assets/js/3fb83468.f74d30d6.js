"use strict";(self.webpackChunkultrawelcome_wiki=self.webpackChunkultrawelcome_wiki||[]).push([[862],{3905:function(e,n,r){r.d(n,{Zo:function(){return p},kt:function(){return d}});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),c=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},p=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return r?t.createElement(f,l(l({ref:n},p),{},{components:r})):t.createElement(f,l({ref:n},p))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6692:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var t=r(7462),a=r(3366),o=(r(7294),r(3905)),l=["components"],i={sidebar_position:1},s="Important",c={unversionedId:"configuration/important",id:"configuration/important",isDocsHomePage:!1,title:"Important",description:"PlaceholderAPI",source:"@site/docs/configuration/important.md",sourceDirName:"configuration",slug:"/configuration/important",permalink:"/docs/configuration/important",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/intro"},next:{title:"Languages",permalink:"/docs/configuration/languages"}},p=[{value:"PlaceholderAPI",id:"placeholderapi",children:[]},{value:"Single/random messages/commands",id:"singlerandom-messagescommands",children:[]}],u={toc:p};function m(e){var n=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"important"},"Important"),(0,o.kt)("h2",{id:"placeholderapi"},"PlaceholderAPI"),(0,o.kt)("p",null,"All messages, except the top welcomers message, support PlaceholderAPI and we also added a very useful feature. You can apply placeholders for multiple players in a single message.",(0,o.kt)("br",{parentName:"p"}),"\n","An example: \u201c%ph_player%%lp_prefix%User killed %ph_new_player%%lp_prefix%User2\u201c",(0,o.kt)("br",{parentName:"p"}),"\n","If a message has placeholders for player names, like %player%, it means that there\u2019s a placeholder for this feature named %ph_player%.  "),(0,o.kt)("p",null,"If you're using spigot you need to have PlaceholderAPI installed.",(0,o.kt)("br",{parentName:"p"}),"\n","On bungeecord (PlaceholderAPI need to be installed on your spigot servers), you need to enable and configure it in the config:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'placeholderapi:\n    # Enables PlaceholderAPI support\n    enabled: false\n    # Types:\n    # Single - all servers receive the message parsed by the specified one\n    # All - every server parse the message by itself but, if PAPI is not installed,\n    #       the placeholders will show in the message\n    type: all\n    # Server name for "single" mode (name is the one specified in the config.yml file of your bungeecord)\n    single-server: Lobby\n')),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"singlerandom-messagescommands"},"Single/random messages/commands"),(0,o.kt)("p",null,"All messages and commands, except the welcome command and the top welcomers messages, can be single or random like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'new-player-message: "single message"\nnew-player-commands:\n  - "a random command"\n  - "another random command"\n')))}m.isMDXComponent=!0}}]);